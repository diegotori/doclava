import org.gradle.internal.jvm.Jvm

apply plugin: 'java'
apply plugin: 'maven'


group = 'org.diegotori.doclava'
archivesBaseName = 'doclava'
version = '1.0.6.1'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	options.warnings = false
}

configurations {
	published
}

install {
	configuration = configurations.published
}

repositories {
	jcenter()
}

dependencies {
	compile files(Jvm.current().toolsJar)
	compile 'com.google.guava:guava:18.0'
	compile 'com.google.jsilver:jsilver:1.0.0'
	compile 'org.antlr:antlr:3.4'

	compile 'org.slf4j:slf4j-simple:1.7.21'
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.5'
	compile 'org.apache.logging.log4j:log4j-core:2.5'
}

javadoc {
	title = "Documentation for $project.name"
	group = JavaBasePlugin.DOCUMENTATION_GROUP
	description "Generates Javadoc for Java Project ${project.name}."
	//Set our code to document.
	source = project.sourceSets.main.allJava
	classpath = files(project.configurations.compile, compileJava.classpath);
	failOnError = false;
	options {
		bootClasspath Jvm.current().runtimeJar
	}
	options.encoding = "UTF-8"
}

task sourceJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	published jar
	published sourceJar
	published javadocJar
}

task fatJar(type: Jar, dependsOn: [':compileJava', ':processResources']){
	group = BasePlugin.BUILD_GROUP
	description = "Creates a statically linked $project.name fat JAR binary."
	from files(sourceSets.main.output)
	def nonJavadocRuntimeDeps = configurations.compile.asFileTree.files.findAll {
		it.name != 'tools.jar'
	}.collect {
		it.isDirectory() ? it : zipTree(it)
	}
	from nonJavadocRuntimeDeps

	manifest {
		attributes 'Main-Class': 'com.google.doclava.Doclava'
	}
	baseName = "${project.name}-fatjar"
	destinationDir = file("$buildDir/fat-jar")
}
